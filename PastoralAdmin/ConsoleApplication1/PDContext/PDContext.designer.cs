#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pastoral.Data.PDContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DiosecisSPM")]
	public partial class PDContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertICategoria(ICategoria instance);
    partial void UpdateICategoria(ICategoria instance);
    partial void DeleteICategoria(ICategoria instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertInstitucion(Institucion instance);
    partial void UpdateInstitucion(Institucion instance);
    partial void DeleteInstitucion(Institucion instance);
    partial void InsertMienbro(Mienbro instance);
    partial void UpdateMienbro(Mienbro instance);
    partial void DeleteMienbro(Mienbro instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertUCategoria(UCategoria instance);
    partial void UpdateUCategoria(UCategoria instance);
    partial void DeleteUCategoria(UCategoria instance);
    #endregion
		
		public PDContextDataContext() : 
				base(global::Pastoral.Data.Properties.Settings.Default.Pastoral_PruebaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PDContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PDContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PDContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PDContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ICategoria> ICategorias
		{
			get
			{
				return this.GetTable<ICategoria>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Institucion> Institucions
		{
			get
			{
				return this.GetTable<Institucion>();
			}
		}
		
		public System.Data.Linq.Table<Mienbro> Mienbros
		{
			get
			{
				return this.GetTable<Mienbro>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<UCategoria> UCategorias
		{
			get
			{
				return this.GetTable<UCategoria>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ICategoria")]
	public partial class ICategoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Categoria;
		
		private string _Name_Categoria;
		
		private string _Desc_Categoria;
		
		private EntityRef<Institucion> _Institucion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CategoriaChanging(int value);
    partial void OnID_CategoriaChanged();
    partial void OnName_CategoriaChanging(string value);
    partial void OnName_CategoriaChanged();
    partial void OnDesc_CategoriaChanging(string value);
    partial void OnDesc_CategoriaChanged();
    #endregion
		
		public ICategoria()
		{
			this._Institucion = default(EntityRef<Institucion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Categoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Categoria
		{
			get
			{
				return this._ID_Categoria;
			}
			set
			{
				if ((this._ID_Categoria != value))
				{
					if (this._Institucion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._ID_Categoria = value;
					this.SendPropertyChanged("ID_Categoria");
					this.OnID_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Categoria", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name_Categoria
		{
			get
			{
				return this._Name_Categoria;
			}
			set
			{
				if ((this._Name_Categoria != value))
				{
					this.OnName_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._Name_Categoria = value;
					this.SendPropertyChanged("Name_Categoria");
					this.OnName_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc_Categoria", DbType="VarChar(100)")]
		public string Desc_Categoria
		{
			get
			{
				return this._Desc_Categoria;
			}
			set
			{
				if ((this._Desc_Categoria != value))
				{
					this.OnDesc_CategoriaChanging(value);
					this.SendPropertyChanging();
					this._Desc_Categoria = value;
					this.SendPropertyChanged("Desc_Categoria");
					this.OnDesc_CategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institucion_ICategoria", Storage="_Institucion", ThisKey="ID_Categoria", OtherKey="ID_Institucion", IsForeignKey=true)]
		public Institucion Institucion
		{
			get
			{
				return this._Institucion.Entity;
			}
			set
			{
				Institucion previousValue = this._Institucion.Entity;
				if (((previousValue != value) 
							|| (this._Institucion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institucion.Entity = null;
						previousValue.ICategoria = null;
					}
					this._Institucion.Entity = value;
					if ((value != null))
					{
						value.ICategoria = this;
						this._ID_Categoria = value.ID_Institucion;
					}
					else
					{
						this._ID_Categoria = default(int);
					}
					this.SendPropertyChanged("Institucion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_usuario;
		
		private string _Name_usuario;
		
		private System.Nullable<int> _Cat_usuario;
		
		private System.Nullable<bool> _St_Usuario;
		
		private System.Nullable<int> _Phone_Usuario;
		
		private string _Adress_Usuario;
		
		private string _Mail_Usuario;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Mienbro> _Mienbro;
		
		private EntityRef<UCategoria> _UCategoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_usuarioChanging(int value);
    partial void OnID_usuarioChanged();
    partial void OnName_usuarioChanging(string value);
    partial void OnName_usuarioChanged();
    partial void OnCat_usuarioChanging(System.Nullable<int> value);
    partial void OnCat_usuarioChanged();
    partial void OnSt_UsuarioChanging(System.Nullable<bool> value);
    partial void OnSt_UsuarioChanged();
    partial void OnPhone_UsuarioChanging(System.Nullable<int> value);
    partial void OnPhone_UsuarioChanged();
    partial void OnAdress_UsuarioChanging(string value);
    partial void OnAdress_UsuarioChanged();
    partial void OnMail_UsuarioChanging(string value);
    partial void OnMail_UsuarioChanged();
    #endregion
		
		public Usuario()
		{
			this._Role = default(EntityRef<Role>);
			this._Mienbro = default(EntityRef<Mienbro>);
			this._UCategoria = default(EntityRef<UCategoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_usuario", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_usuario
		{
			get
			{
				return this._ID_usuario;
			}
			set
			{
				if ((this._ID_usuario != value))
				{
					if ((this._Mienbro.HasLoadedOrAssignedValue || this._UCategoria.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_usuarioChanging(value);
					this.SendPropertyChanging();
					this._ID_usuario = value;
					this.SendPropertyChanged("ID_usuario");
					this.OnID_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_usuario", DbType="VarChar(50)")]
		public string Name_usuario
		{
			get
			{
				return this._Name_usuario;
			}
			set
			{
				if ((this._Name_usuario != value))
				{
					this.OnName_usuarioChanging(value);
					this.SendPropertyChanging();
					this._Name_usuario = value;
					this.SendPropertyChanged("Name_usuario");
					this.OnName_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_usuario", DbType="Int")]
		public System.Nullable<int> Cat_usuario
		{
			get
			{
				return this._Cat_usuario;
			}
			set
			{
				if ((this._Cat_usuario != value))
				{
					this.OnCat_usuarioChanging(value);
					this.SendPropertyChanging();
					this._Cat_usuario = value;
					this.SendPropertyChanged("Cat_usuario");
					this.OnCat_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_St_Usuario", DbType="Bit")]
		public System.Nullable<bool> St_Usuario
		{
			get
			{
				return this._St_Usuario;
			}
			set
			{
				if ((this._St_Usuario != value))
				{
					this.OnSt_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._St_Usuario = value;
					this.SendPropertyChanged("St_Usuario");
					this.OnSt_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Usuario", DbType="Int")]
		public System.Nullable<int> Phone_Usuario
		{
			get
			{
				return this._Phone_Usuario;
			}
			set
			{
				if ((this._Phone_Usuario != value))
				{
					this.OnPhone_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._Phone_Usuario = value;
					this.SendPropertyChanged("Phone_Usuario");
					this.OnPhone_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress_Usuario", DbType="VarChar(100)")]
		public string Adress_Usuario
		{
			get
			{
				return this._Adress_Usuario;
			}
			set
			{
				if ((this._Adress_Usuario != value))
				{
					this.OnAdress_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._Adress_Usuario = value;
					this.SendPropertyChanged("Adress_Usuario");
					this.OnAdress_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail_Usuario", DbType="VarChar(50)")]
		public string Mail_Usuario
		{
			get
			{
				return this._Mail_Usuario;
			}
			set
			{
				if ((this._Mail_Usuario != value))
				{
					this.OnMail_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._Mail_Usuario = value;
					this.SendPropertyChanged("Mail_Usuario");
					this.OnMail_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Role", Storage="_Role", ThisKey="ID_usuario", OtherKey="ID_Roles", IsUnique=true, IsForeignKey=false)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Usuario = null;
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Usuario = this;
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mienbro_Usuario", Storage="_Mienbro", ThisKey="ID_usuario", OtherKey="ID_Miembro", IsForeignKey=true)]
		public Mienbro Mienbro
		{
			get
			{
				return this._Mienbro.Entity;
			}
			set
			{
				Mienbro previousValue = this._Mienbro.Entity;
				if (((previousValue != value) 
							|| (this._Mienbro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mienbro.Entity = null;
						previousValue.Usuario = null;
					}
					this._Mienbro.Entity = value;
					if ((value != null))
					{
						value.Usuario = this;
						this._ID_usuario = value.ID_Miembro;
					}
					else
					{
						this._ID_usuario = default(int);
					}
					this.SendPropertyChanged("Mienbro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UCategoria_Usuario", Storage="_UCategoria", ThisKey="ID_usuario", OtherKey="ID_UserCategoria", IsForeignKey=true)]
		public UCategoria UCategoria
		{
			get
			{
				return this._UCategoria.Entity;
			}
			set
			{
				UCategoria previousValue = this._UCategoria.Entity;
				if (((previousValue != value) 
							|| (this._UCategoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UCategoria.Entity = null;
						previousValue.Usuario = null;
					}
					this._UCategoria.Entity = value;
					if ((value != null))
					{
						value.Usuario = this;
						this._ID_usuario = value.ID_UserCategoria;
					}
					else
					{
						this._ID_usuario = default(int);
					}
					this.SendPropertyChanged("UCategoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Institucion")]
	public partial class Institucion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Institucion;
		
		private string _Name_Institucion;
		
		private System.Nullable<int> _Cat_Institucion;
		
		private string _Adrees_Institucion;
		
		private System.Nullable<int> _Phone_Institucion;
		
		private string _Mail_Institucion;
		
		private EntityRef<ICategoria> _ICategoria;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_InstitucionChanging(int value);
    partial void OnID_InstitucionChanged();
    partial void OnName_InstitucionChanging(string value);
    partial void OnName_InstitucionChanged();
    partial void OnCat_InstitucionChanging(System.Nullable<int> value);
    partial void OnCat_InstitucionChanged();
    partial void OnAdrees_InstitucionChanging(string value);
    partial void OnAdrees_InstitucionChanged();
    partial void OnPhone_InstitucionChanging(System.Nullable<int> value);
    partial void OnPhone_InstitucionChanged();
    partial void OnMail_InstitucionChanging(string value);
    partial void OnMail_InstitucionChanged();
    #endregion
		
		public Institucion()
		{
			this._ICategoria = default(EntityRef<ICategoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Institucion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Institucion
		{
			get
			{
				return this._ID_Institucion;
			}
			set
			{
				if ((this._ID_Institucion != value))
				{
					this.OnID_InstitucionChanging(value);
					this.SendPropertyChanging();
					this._ID_Institucion = value;
					this.SendPropertyChanged("ID_Institucion");
					this.OnID_InstitucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Institucion", DbType="VarChar(100)")]
		public string Name_Institucion
		{
			get
			{
				return this._Name_Institucion;
			}
			set
			{
				if ((this._Name_Institucion != value))
				{
					this.OnName_InstitucionChanging(value);
					this.SendPropertyChanging();
					this._Name_Institucion = value;
					this.SendPropertyChanged("Name_Institucion");
					this.OnName_InstitucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cat_Institucion", DbType="Int")]
		public System.Nullable<int> Cat_Institucion
		{
			get
			{
				return this._Cat_Institucion;
			}
			set
			{
				if ((this._Cat_Institucion != value))
				{
					this.OnCat_InstitucionChanging(value);
					this.SendPropertyChanging();
					this._Cat_Institucion = value;
					this.SendPropertyChanged("Cat_Institucion");
					this.OnCat_InstitucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adrees_Institucion", DbType="VarChar(100)")]
		public string Adrees_Institucion
		{
			get
			{
				return this._Adrees_Institucion;
			}
			set
			{
				if ((this._Adrees_Institucion != value))
				{
					this.OnAdrees_InstitucionChanging(value);
					this.SendPropertyChanging();
					this._Adrees_Institucion = value;
					this.SendPropertyChanged("Adrees_Institucion");
					this.OnAdrees_InstitucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_Institucion", DbType="Int")]
		public System.Nullable<int> Phone_Institucion
		{
			get
			{
				return this._Phone_Institucion;
			}
			set
			{
				if ((this._Phone_Institucion != value))
				{
					this.OnPhone_InstitucionChanging(value);
					this.SendPropertyChanging();
					this._Phone_Institucion = value;
					this.SendPropertyChanged("Phone_Institucion");
					this.OnPhone_InstitucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail_Institucion", DbType="VarChar(50)")]
		public string Mail_Institucion
		{
			get
			{
				return this._Mail_Institucion;
			}
			set
			{
				if ((this._Mail_Institucion != value))
				{
					this.OnMail_InstitucionChanging(value);
					this.SendPropertyChanging();
					this._Mail_Institucion = value;
					this.SendPropertyChanged("Mail_Institucion");
					this.OnMail_InstitucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institucion_ICategoria", Storage="_ICategoria", ThisKey="ID_Institucion", OtherKey="ID_Categoria", IsUnique=true, IsForeignKey=false)]
		public ICategoria ICategoria
		{
			get
			{
				return this._ICategoria.Entity;
			}
			set
			{
				ICategoria previousValue = this._ICategoria.Entity;
				if (((previousValue != value) 
							|| (this._ICategoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ICategoria.Entity = null;
						previousValue.Institucion = null;
					}
					this._ICategoria.Entity = value;
					if ((value != null))
					{
						value.Institucion = this;
					}
					this.SendPropertyChanged("ICategoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mienbros")]
	public partial class Mienbro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Miembro;
		
		private string _Name_Mienbro;
		
		private string _LastName_Mienbro;
		
		private System.Nullable<System.DateTime> _Fecha_Nac_Miembro;
		
		private System.Nullable<System.DateTime> _Fecha_Ingreso_Mienbro;
		
		private string _Adress_Mienbro;
		
		private System.Nullable<bool> _ST_Matrimonio;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MiembroChanging(int value);
    partial void OnID_MiembroChanged();
    partial void OnName_MienbroChanging(string value);
    partial void OnName_MienbroChanged();
    partial void OnLastName_MienbroChanging(string value);
    partial void OnLastName_MienbroChanged();
    partial void OnFecha_Nac_MiembroChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_Nac_MiembroChanged();
    partial void OnFecha_Ingreso_MienbroChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_Ingreso_MienbroChanged();
    partial void OnAdress_MienbroChanging(string value);
    partial void OnAdress_MienbroChanged();
    partial void OnST_MatrimonioChanging(System.Nullable<bool> value);
    partial void OnST_MatrimonioChanged();
    #endregion
		
		public Mienbro()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Miembro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Miembro
		{
			get
			{
				return this._ID_Miembro;
			}
			set
			{
				if ((this._ID_Miembro != value))
				{
					this.OnID_MiembroChanging(value);
					this.SendPropertyChanging();
					this._ID_Miembro = value;
					this.SendPropertyChanged("ID_Miembro");
					this.OnID_MiembroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Mienbro", DbType="VarChar(50)")]
		public string Name_Mienbro
		{
			get
			{
				return this._Name_Mienbro;
			}
			set
			{
				if ((this._Name_Mienbro != value))
				{
					this.OnName_MienbroChanging(value);
					this.SendPropertyChanging();
					this._Name_Mienbro = value;
					this.SendPropertyChanged("Name_Mienbro");
					this.OnName_MienbroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName_Mienbro", DbType="VarChar(50)")]
		public string LastName_Mienbro
		{
			get
			{
				return this._LastName_Mienbro;
			}
			set
			{
				if ((this._LastName_Mienbro != value))
				{
					this.OnLastName_MienbroChanging(value);
					this.SendPropertyChanging();
					this._LastName_Mienbro = value;
					this.SendPropertyChanged("LastName_Mienbro");
					this.OnLastName_MienbroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Nac_Miembro", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha_Nac_Miembro
		{
			get
			{
				return this._Fecha_Nac_Miembro;
			}
			set
			{
				if ((this._Fecha_Nac_Miembro != value))
				{
					this.OnFecha_Nac_MiembroChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Nac_Miembro = value;
					this.SendPropertyChanged("Fecha_Nac_Miembro");
					this.OnFecha_Nac_MiembroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Ingreso_Mienbro", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha_Ingreso_Mienbro
		{
			get
			{
				return this._Fecha_Ingreso_Mienbro;
			}
			set
			{
				if ((this._Fecha_Ingreso_Mienbro != value))
				{
					this.OnFecha_Ingreso_MienbroChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Ingreso_Mienbro = value;
					this.SendPropertyChanged("Fecha_Ingreso_Mienbro");
					this.OnFecha_Ingreso_MienbroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress_Mienbro", DbType="VarChar(100)")]
		public string Adress_Mienbro
		{
			get
			{
				return this._Adress_Mienbro;
			}
			set
			{
				if ((this._Adress_Mienbro != value))
				{
					this.OnAdress_MienbroChanging(value);
					this.SendPropertyChanging();
					this._Adress_Mienbro = value;
					this.SendPropertyChanged("Adress_Mienbro");
					this.OnAdress_MienbroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ST_Matrimonio", DbType="Bit")]
		public System.Nullable<bool> ST_Matrimonio
		{
			get
			{
				return this._ST_Matrimonio;
			}
			set
			{
				if ((this._ST_Matrimonio != value))
				{
					this.OnST_MatrimonioChanging(value);
					this.SendPropertyChanging();
					this._ST_Matrimonio = value;
					this.SendPropertyChanged("ST_Matrimonio");
					this.OnST_MatrimonioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mienbro_Usuario", Storage="_Usuario", ThisKey="ID_Miembro", OtherKey="ID_usuario", IsUnique=true, IsForeignKey=false)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Mienbro = null;
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Mienbro = this;
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Roles;
		
		private string _Name_Roles;
		
		private string _Desc_Roles;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RolesChanging(int value);
    partial void OnID_RolesChanged();
    partial void OnName_RolesChanging(string value);
    partial void OnName_RolesChanged();
    partial void OnDesc_RolesChanging(string value);
    partial void OnDesc_RolesChanged();
    #endregion
		
		public Role()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Roles", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Roles
		{
			get
			{
				return this._ID_Roles;
			}
			set
			{
				if ((this._ID_Roles != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_RolesChanging(value);
					this.SendPropertyChanging();
					this._ID_Roles = value;
					this.SendPropertyChanged("ID_Roles");
					this.OnID_RolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Roles", DbType="VarChar(50)")]
		public string Name_Roles
		{
			get
			{
				return this._Name_Roles;
			}
			set
			{
				if ((this._Name_Roles != value))
				{
					this.OnName_RolesChanging(value);
					this.SendPropertyChanging();
					this._Name_Roles = value;
					this.SendPropertyChanged("Name_Roles");
					this.OnName_RolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc_Roles", DbType="NChar(10)")]
		public string Desc_Roles
		{
			get
			{
				return this._Desc_Roles;
			}
			set
			{
				if ((this._Desc_Roles != value))
				{
					this.OnDesc_RolesChanging(value);
					this.SendPropertyChanging();
					this._Desc_Roles = value;
					this.SendPropertyChanged("Desc_Roles");
					this.OnDesc_RolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Role", Storage="_Usuario", ThisKey="ID_Roles", OtherKey="ID_usuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Role = null;
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Role = this;
						this._ID_Roles = value.ID_usuario;
					}
					else
					{
						this._ID_Roles = default(int);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UCategoria")]
	public partial class UCategoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_UserCategoria;
		
		private string _Name_UserCategoria;
		
		private System.Data.Linq.Binary _Desc_UserCategoria;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_UserCategoriaChanging(int value);
    partial void OnID_UserCategoriaChanged();
    partial void OnName_UserCategoriaChanging(string value);
    partial void OnName_UserCategoriaChanged();
    partial void OnDesc_UserCategoriaChanging(System.Data.Linq.Binary value);
    partial void OnDesc_UserCategoriaChanged();
    #endregion
		
		public UCategoria()
		{
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_UserCategoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_UserCategoria
		{
			get
			{
				return this._ID_UserCategoria;
			}
			set
			{
				if ((this._ID_UserCategoria != value))
				{
					this.OnID_UserCategoriaChanging(value);
					this.SendPropertyChanging();
					this._ID_UserCategoria = value;
					this.SendPropertyChanged("ID_UserCategoria");
					this.OnID_UserCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_UserCategoria", DbType="VarChar(50)")]
		public string Name_UserCategoria
		{
			get
			{
				return this._Name_UserCategoria;
			}
			set
			{
				if ((this._Name_UserCategoria != value))
				{
					this.OnName_UserCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Name_UserCategoria = value;
					this.SendPropertyChanged("Name_UserCategoria");
					this.OnName_UserCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desc_UserCategoria", DbType="VarBinary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Desc_UserCategoria
		{
			get
			{
				return this._Desc_UserCategoria;
			}
			set
			{
				if ((this._Desc_UserCategoria != value))
				{
					this.OnDesc_UserCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Desc_UserCategoria = value;
					this.SendPropertyChanged("Desc_UserCategoria");
					this.OnDesc_UserCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UCategoria_Usuario", Storage="_Usuario", ThisKey="ID_UserCategoria", OtherKey="ID_usuario", IsUnique=true, IsForeignKey=false)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.UCategoria = null;
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.UCategoria = this;
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
